# -*- coding: utf-8 -*-
"""medical_data_visualizer.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vcW6EuOvR4anhM_IDJVOK6RyuIE9dRYs
"""

import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
df=pd.read_csv('medical_examination.csv')
df.head()

# Agregar la columna 'overweight'
df['height_m'] = df['height'] / 100
df['BMI'] = df['weight'] / (df['height_m'] ** 2)
df['overweight'] = (df['BMI'] > 25).astype(int)

# Normalizar las columnas
df['cholesterol'] = (df['cholesterol'] > 1).astype(int)
df['gluc'] = (df['gluc'] > 1).astype(int)

# Convertir los datos a formato largo
df_long = pd.melt(df, id_vars=['cardio'], value_vars=['cholesterol', 'gluc', 'alco', 'active', 'smoke'],
                   var_name='variable', value_name='value')

# Crear el gráfico de recuentos
g = sns.catplot(data=df_long, x='variable', hue='value', col='cardio', kind='count')
g.set_axis_labels('Feature', 'Count')
plt.show()

# Limpiar los datos
df_cleaned = df[
    (df['ap_lo'] <= df['ap_hi']) &
    (df['height'] >= df['height'].quantile(0.025)) &
    (df['height'] <= df['height'].quantile(0.975)) &
    (df['weight'] >= df['weight'].quantile(0.025)) &
    (df['weight'] <= df['weight'].quantile(0.975))
]
# Crear la matriz de correlación
corr = df_cleaned.corr()
# Crear una máscara para el triángulo superior
mask = np.triu(np.ones_like(corr, dtype=bool))

# Crear el gráfico de la matriz de correlación
plt.figure(figsize=(12, 8))
sns.heatmap(corr, mask=mask, annot=True, cmap='coolwarm', vmin=-1, vmax=1)
plt.title('Matriz de Correlación')
plt.show()